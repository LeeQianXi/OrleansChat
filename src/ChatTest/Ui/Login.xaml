<Window x:Class="ChatTest.Ui.Login"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ChatTest.Ui"
        mc:Ignorable="d"
        WindowStyle="None"
        AllowsTransparency="True"
        Background="Transparent"
        Height="450" Width="300">
    <Window.Resources>
        <SolidColorBrush x:Key="ActionColor"/>
        <FontFamily x:Key="HarmonyOS_Sans_Medium"/>
    </Window.Resources>
    <Border x:Name="LoginWindow" BorderThickness="2" CornerRadius="5" MouseMove="LoginWindow_MouseMove">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="3"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <DockPanel x:Name="WindowHead" Grid.Row="0" LastChildFill="False">
                <DockPanel.Resources>
                    <Style x:Key="StyBtnNoBorder" TargetType="Button">
                        <Setter Property="Background" Value="{Binding BackGround,Mode=OneWay,ElementName=LoginWindow}"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="BorderBrush" Value="{Binding BackGround,Mode=OneWay,RelativeSource={RelativeSource Self}}"/>
                        <Setter Property="OpacityMask" Value="{Binding BackGround,Mode=OneWay,RelativeSource={RelativeSource Self}}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Grid Background="Transparent">
                                        <Border Background="{TemplateBinding Background}" BorderThickness="0">
                                            <ContentPresenter Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{Binding BorderBrush,Mode=OneWay,RelativeSource={RelativeSource Self}}"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter Property="Background" Value="{Binding OpacityMask,Mode=OneWay,RelativeSource={RelativeSource Self}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </DockPanel.Resources>
                <Button x:Name="BtnClose" DockPanel.Dock="Right" Style="{StaticResource StyBtnNoBorder}" Padding="3" Height="30" Width="{Binding Height, Mode=TwoWay, RelativeSource={RelativeSource Self}}" Click="BtnClose_Click">
                    <Button.Content>
                        <Path Stroke="Black" StrokeThickness="2.4">
                            <Path.Data>
                                <GeometryGroup>
                                    <LineGeometry StartPoint="0,0" EndPoint="18,18"/>
                                    <LineGeometry StartPoint="0,18" EndPoint="18,0"/>
                                </GeometryGroup>
                            </Path.Data>
                        </Path>
                    </Button.Content>
                </Button>
                <Button x:Name="BtnMinest" DockPanel.Dock="Right" Style="{StaticResource StyBtnNoBorder}" Padding="3" Height="30" Width="{Binding Height,Mode=TwoWay,RelativeSource={RelativeSource Self}}" Click="BtnMinest_Click">
                    <Button.Content>
                        <Path Stroke="Black" StrokeThickness="2.4">
                            <Path.Data>
                                <GeometryGroup>
                                    <LineGeometry StartPoint="0,0" EndPoint="20,0"/>
                                </GeometryGroup>
                            </Path.Data>
                        </Path>
                    </Button.Content>
                </Button>
                <Border x:Name="ImgHeadDock" DockPanel.Dock="Left" Padding="3" Visibility="Collapsed">
                    <Image x:Name="ImgHeadIcon" Height="24" Width="{Binding Height,Mode=OneWay,RelativeSource={RelativeSource Self}}" Stretch="UniformToFill"/>
                </Border>
                <Label Name="LabHeadTitle" DockPanel.Dock="Left" Height="30" Width="auto" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="17"/>
            </DockPanel>
            <GridSplitter Grid.Row="1" Grid.Column="0" HorizontalAlignment="Stretch" Background="{Binding BorderBrush, ElementName=LoginWindow, Mode=OneWay}" Focusable="False" Cursor="SizeNS" IsEnabled="False"/>
            <Border Grid.Row="2" x:Name="WindowBody">
                <Border.Resources>
                </Border.Resources>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Row="1" Grid.Column="1">
                        <Grid.RowDefinitions>
                            <!--头像-->
                            <RowDefinition Height="auto"/>
                            <!--用户名 密码-->
                            <RowDefinition Height="auto"/>
                            <!--按钮1-->
                            <RowDefinition Height="auto"/>
                            <!--按钮2-->
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <Border Grid.Row="0" BorderThickness="3" Width="86" Height="86" BorderBrush="{Binding BorderBrush,Mode=OneWay,ElementName=LoginWindow}" CornerRadius="100">
                            <Image x:Name="ImgUserIcon" Stretch="UniformToFill">
                                <Image.Clip>
                                    <EllipseGeometry Center="40,40" RadiusX="40" RadiusY="40"/>
                                </Image.Clip>
                            </Image>
                        </Border>
                        <Grid Grid.Row="1" Margin="0,14,0,7">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="9"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="175"/>
                            </Grid.ColumnDefinitions>
                            <Grid.Resources>
                                <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
                                <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
                                <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
                                <SolidColorBrush x:Key="TextBox.BackGround.HalfTran" Color="#99ffffff"/>
                                <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
                                    <Setter Property="Background" Value="{DynamicResource TextBox.BackGround.HalfTran}"/>
                                    <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                    <Setter Property="BorderThickness" Value="1"/>
                                    <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                                    <Setter Property="FontSize" Value="20"/>
                                    <Setter Property="FontFamily" Value="{DynamicResource HarmonyOS_Sans_Medium}"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                    <Setter Property="AllowDrop" Value="true"/>
                                    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                                    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type TextBox}">
                                                <ControlTemplate.Resources>
                                                    <Storyboard x:Key="Storyboard1">
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="grid">
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1.03"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="grid">
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1.15"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                    <Storyboard x:Key="Storyboard2">
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="grid">
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.95"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="grid">
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.95"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </ControlTemplate.Resources>
                                                <Grid>
                                                    <Grid x:Name="grid" RenderTransformOrigin="0.5,0.5">
                                                        <Grid.RenderTransform>
                                                            <TransformGroup>
                                                                <ScaleTransform ScaleX="0.95" ScaleY="0.95"/>
                                                                <SkewTransform/>
                                                                <RotateTransform/>
                                                                <TranslateTransform/>
                                                            </TransformGroup>
                                                        </Grid.RenderTransform>
                                                        <Path Data="M-0.5,10.125 L-0.5,-0.5 9.5,-0.5"  Height="10"  Stretch="Fill" Stroke="{DynamicResource ActionColor}"  Width="10" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                                        <Path Data="M-0.5,10.125 L-0.5,-0.5 9.5,-0.5"  Height="10"  Stretch="Fill" Stroke="{DynamicResource ActionColor}"  Width="10" HorizontalAlignment="Right" VerticalAlignment="Top"  RenderTransformOrigin="0.5,0.5">
                                                            <Path.RenderTransform>
                                                                <TransformGroup>
                                                                    <ScaleTransform/>
                                                                    <SkewTransform/>
                                                                    <RotateTransform Angle="90"/>
                                                                    <TranslateTransform/>
                                                                </TransformGroup>
                                                            </Path.RenderTransform>
                                                        </Path>
                                                        <Path Data="M-0.5,10.125 L-0.5,-0.5 9.5,-0.5"  Height="10"  Stretch="Fill" Stroke="{DynamicResource ActionColor}"  Width="10" HorizontalAlignment="Right" VerticalAlignment="Bottom"  RenderTransformOrigin="0.5,0.5">
                                                            <Path.RenderTransform>
                                                                <TransformGroup>
                                                                    <ScaleTransform/>
                                                                    <SkewTransform/>
                                                                    <RotateTransform Angle="180"/>
                                                                    <TranslateTransform/>
                                                                </TransformGroup>
                                                            </Path.RenderTransform>
                                                        </Path>
                                                        <Path Data="M-0.5,10.125 L-0.5,-0.5 9.5,-0.5"  Height="10"  Stretch="Fill" Stroke="{DynamicResource ActionColor}"  Width="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"  RenderTransformOrigin="0.5,0.5">
                                                            <Path.RenderTransform>
                                                                <TransformGroup>
                                                                    <ScaleTransform/>
                                                                    <SkewTransform/>
                                                                    <RotateTransform Angle="-90"/>
                                                                    <TranslateTransform/>
                                                                </TransformGroup>
                                                            </Path.RenderTransform>
                                                        </Path>
                                                    </Grid>
                                                    <Border  x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="4">
                                                        <Grid>
                                                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                                        </Grid>
                                                    </Border>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsFocused" Value="True">
                                                        <Trigger.ExitActions>
                                                            <BeginStoryboard x:Name="Storyboard2_BeginStoryboard" Storyboard="{StaticResource Storyboard2}"/>
                                                        </Trigger.ExitActions>
                                                        <Trigger.EnterActions>
                                                            <BeginStoryboard Storyboard="{StaticResource Storyboard1}"/>
                                                        </Trigger.EnterActions>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="false">
                                                        <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                                                    </Trigger>
                                                    <Trigger Property="IsMouseOver" Value="true">
                                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                                                    </Trigger>
                                                    <Trigger Property="IsKeyboardFocused" Value="true">
                                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                                                <Condition Property="IsSelectionActive" Value="false"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                        </MultiTrigger>
                                    </Style.Triggers>
                                </Style>
                                <Style x:Key="PasswordBoxStyle" TargetType="{x:Type PasswordBox}">
                                    <Setter Property="FontSize" Value="20"/>
                                    <Setter Property="FontFamily" Value="{DynamicResource HarmonyOS_Sans_Medium}"/>
                                    <Setter Property="PasswordChar" Value="*"/>
                                    <Setter Property="Background" Value="{DynamicResource TextBox.BackGround.HalfTran}"/>
                                    <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                    <Setter Property="BorderThickness" Value="1"/>
                                    <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                    <Setter Property="AllowDrop" Value="true"/>
                                    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                                    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type PasswordBox}">
                                                <ControlTemplate.Resources>
                                                    <Storyboard x:Key="Storyboard1">
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="grid">
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1.03"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="grid">
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1.15"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                    <Storyboard x:Key="Storyboard2">
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="grid">
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.95"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="grid">
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.95"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </ControlTemplate.Resources>
                                                <Grid>
                                                    <Grid x:Name="grid" RenderTransformOrigin="0.5,0.5">
                                                        <Grid.RenderTransform>
                                                            <TransformGroup>
                                                                <ScaleTransform ScaleX="0.95" ScaleY="0.95"/>
                                                                <SkewTransform/>
                                                                <RotateTransform/>
                                                                <TranslateTransform/>
                                                            </TransformGroup>
                                                        </Grid.RenderTransform>
                                                        <Path Data="M-0.5,10.125 L-0.5,-0.5 9.5,-0.5"  Height="10"  Stretch="Fill" Stroke="{DynamicResource ActionColor}"  Width="10" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                                        <Path Data="M-0.5,10.125 L-0.5,-0.5 9.5,-0.5"  Height="10"  Stretch="Fill" Stroke="{DynamicResource ActionColor}"  Width="10" HorizontalAlignment="Right" VerticalAlignment="Top"  RenderTransformOrigin="0.5,0.5">
                                                            <Path.RenderTransform>
                                                                <TransformGroup>
                                                                    <ScaleTransform/>
                                                                    <SkewTransform/>
                                                                    <RotateTransform Angle="90"/>
                                                                    <TranslateTransform/>
                                                                </TransformGroup>
                                                            </Path.RenderTransform>
                                                        </Path>
                                                        <Path Data="M-0.5,10.125 L-0.5,-0.5 9.5,-0.5"  Height="10"  Stretch="Fill" Stroke="{DynamicResource ActionColor}"  Width="10" HorizontalAlignment="Right" VerticalAlignment="Bottom"  RenderTransformOrigin="0.5,0.5">
                                                            <Path.RenderTransform>
                                                                <TransformGroup>
                                                                    <ScaleTransform/>
                                                                    <SkewTransform/>
                                                                    <RotateTransform Angle="180"/>
                                                                    <TranslateTransform/>
                                                                </TransformGroup>
                                                            </Path.RenderTransform>
                                                        </Path>
                                                        <Path Data="M-0.5,10.125 L-0.5,-0.5 9.5,-0.5"  Height="10"  Stretch="Fill" Stroke="{DynamicResource ActionColor}"  Width="10" HorizontalAlignment="Left" VerticalAlignment="Bottom"  RenderTransformOrigin="0.5,0.5">
                                                            <Path.RenderTransform>
                                                                <TransformGroup>
                                                                    <ScaleTransform/>
                                                                    <SkewTransform/>
                                                                    <RotateTransform Angle="-90"/>
                                                                    <TranslateTransform/>
                                                                </TransformGroup>
                                                            </Path.RenderTransform>
                                                        </Path>
                                                    </Grid>
                                                    <Grid>
                                                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="4">
                                                            <Grid>
                                                                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                                            </Grid>
                                                        </Border>
                                                    </Grid>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsFocused" Value="True">
                                                        <Trigger.ExitActions>
                                                            <BeginStoryboard x:Name="Storyboard2_BeginStoryboard" Storyboard="{StaticResource Storyboard2}"/>
                                                        </Trigger.ExitActions>
                                                        <Trigger.EnterActions>
                                                            <BeginStoryboard Storyboard="{StaticResource Storyboard1}"/>
                                                        </Trigger.EnterActions>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="false">
                                                        <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                                                    </Trigger>
                                                    <Trigger Property="IsMouseOver" Value="true">
                                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                                                    </Trigger>
                                                    <Trigger Property="IsKeyboardFocused" Value="true">
                                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                                                <Condition Property="IsSelectionActive" Value="false"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                        </MultiTrigger>
                                    </Style.Triggers>
                                </Style>
                                <Style x:Key="StyLabContext" TargetType="Label">
                                    <Setter Property="FontSize" Value="18"/>
                                    <Setter Property="FontFamily" Value="{DynamicResource HarmonyOS_Sans_Medium}"/>
                                    <Setter Property="Foreground" Value="Black"/>
                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                    <Setter Property="FontStretch" Value="Normal"/>
                                </Style>
                            </Grid.Resources>
                            <Label Grid.Column="0" Grid.Row="0" Content="用户名" Style="{StaticResource StyLabContext}"/>
                            <TextBox x:Name="TbxUserName" Grid.Column="1" Grid.Row=" 0" Style="{StaticResource TextBoxStyle}"/>
                            <Label Grid.Column="0" Grid.Row="2" Content="密码" Style="{StaticResource StyLabContext}"/>
                            <PasswordBox x:Name="TbxPasswd" Grid.Column="1" Grid.Row="2" Style="{StaticResource PasswordBoxStyle}"/>
                        </Grid>
                        <DockPanel Grid.Row="2" LastChildFill="False">
                            <Button x:Name="BtnRegister" DockPanel.Dock="Right" Content="注册用户" Click="BtnRegister_Click">
                                <Button.Resources>
                                    <SolidColorBrush x:Key="Button.BtnRegister.PreBackGround" Color="#DDFFC0CB"/>
                                    <SolidColorBrush x:Key="Button.BtnRegister.OverBackGround" Color="#DDE2C6CB"/>
                                    <SolidColorBrush x:Key="Button.BtnRegister.PressBackGround" Color="#FFFF8195"/>
                                </Button.Resources>
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Setter Property="FontFamily" Value="{DynamicResource HarmonyOS_Sans_Medium}"/>
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="Foreground" Value="{DynamicResource Button.BtnRegister.PreBackGround}"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="Button">
                                                    <Grid Background="Transparent">
                                                        <Border Background="{TemplateBinding Background}" BorderThickness="0">
                                                            <ContentPresenter Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                        </Border>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Foreground" Value="{DynamicResource Button.BtnRegister.OverBackGround}"/>
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="True">
                                                            <Setter Property="Foreground" Value="{DynamicResource Button.BtnRegister.PressBackGround}"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </DockPanel>
                        <Button x:Name="BtnLogIn" Grid.Row="3" Content="登录" Width="120" Height="40" Click="BtnLogIn_Click">
                            <Button.Resources>
                                <SolidColorBrush x:Key="Button.BtnLogin.PreBackGround" Color="#DDFFC0CB"/>
                                <SolidColorBrush x:Key="Button.BtnLogin.OverBackGround" Color="#DDFFFFFF"/>
                                <SolidColorBrush x:Key="Button.BtnLogin.PressBackGround" Color="#AAFFFFFF"/>
                            </Button.Resources>
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="Background" Value="{DynamicResource Button.BtnLogin.PreBackGround}"/>
                                    <Setter Property="Foreground" Value="White"/>
                                    <Setter Property="BorderThickness" Value="2.2"/>
                                    <Setter Property="BorderBrush" Value="{Binding Background,Mode=OneTime,RelativeSource={RelativeSource Self}}"/>
                                    <Setter Property="FontSize" Value="17"/>
                                    <Setter Property="FontFamily" Value="{DynamicResource HarmonyOS_Sans_Medium}"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="13">
                                                    <Grid Background="Transparent">
                                                        <ContentPresenter Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                    </Grid>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="{DynamicResource Button.BtnLogin.OverBackGround}"/>
                                                        <Setter Property="Foreground" Value="{DynamicResource Button.BtnLogin.PreBackGround}"/>
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter Property="Background" Value="{DynamicResource Button.BtnLogin.PressBackGround}"/>
                                                        <Setter Property="Foreground" Value="{DynamicResource Button.BtnLogin.PreBackGround}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Button.Style>
                        </Button>
                    </Grid>
                </Grid>
            </Border>
        </Grid>
    </Border>
</Window>